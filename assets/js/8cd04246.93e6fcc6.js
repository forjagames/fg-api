"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[381],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:r,o[1]=p;for(var l=2;l<a;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6323:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const a={},o="Getting Started",p={unversionedId:"integrations/typescript-sdk/intro",id:"integrations/typescript-sdk/intro",title:"Getting Started",description:"Setup",source:"@site/docs/integrations/typescript-sdk/intro.md",sourceDirName:"integrations/typescript-sdk",slug:"/integrations/typescript-sdk/intro",permalink:"/fg-api/docs/integrations/typescript-sdk/intro",editUrl:"https://github.com/forjagames/fg-api/edit/main/docs/website/docs/integrations/typescript-sdk/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/fg-api/docs/integrations/javascript-browser-sdk/intro"},next:{title:"Billing",permalink:"/fg-api/docs/billingx/billing"}},s=[{value:"Setup",id:"setup",children:[],level:2},{value:"Getting Started",id:"getting-started-1",children:[{value:"Step 1. Import",id:"step-1-import",children:[],level:3},{value:"Step 2. Initialize the Engine.",id:"step-2-initialize-the-engine",children:[],level:3},{value:"Step 3. The initialization is ready. You can start using the APIs.",id:"step-3-the-initialization-is-ready-you-can-start-using-the-apis",children:[],level:3}],level:2},{value:"Example",id:"example",children:[],level:2}],l={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @forjagames/nexus\n")),(0,r.kt)("h2",{id:"getting-started-1"},"Getting Started"),(0,r.kt)("h3",{id:"step-1-import"},"Step 1. Import"),(0,r.kt)("p",null,"Once you have done the Setup, you have to import the main classes: ",(0,r.kt)("inlineCode",{parentName:"p"},"NexusFactory")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Nexus")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"'@forjagames/nexus'"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { NexusFactory, Nexus } from '@forjagames/nexus';\n")),(0,r.kt)("h3",{id:"step-2-initialize-the-engine"},"Step 2. Initialize the Engine."),(0,r.kt)("p",null,"You have to initialize the API."),(0,r.kt)("p",null,"So, you need to call the ",(0,r.kt)("inlineCode",{parentName:"p"},"initialize")," static method from ",(0,r.kt)("inlineCode",{parentName:"p"},"NexusFactory"),", and fill it with your project credentials."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const api = await NexusFactory.initialize('PUBLIC KEY', 'SECRET');\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"initialize")," method can also take additional parameters."),(0,r.kt)("p",null,"Alternative:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"//  @param publicKey: string\n//  @param secret: string\n//  @param requestDriver: 'fetch' | 'axios'\n\nconst api = await NexusFactory.initialize('PUBLIC KEY', 'SECRET', { requestDriver: 'fetch' });\n")),(0,r.kt)("h3",{id:"step-3-the-initialization-is-ready-you-can-start-using-the-apis"},"Step 3. The initialization is ready. You can start using the APIs."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"async function exampleFunction() {\n  const api = await NexusFactory.initialize('PUBLIC KEY', 'SECRET');\n  \n  const storage = api.getStorage();\n\n  const connection = await storage.connectToDrive('DRIVE UUID');\n  \n  const filesApi = api.getFiles(connection);\n\n  const files = await filesApi.find('*.md');\n\n  return files;\n}\n")))}u.isMDXComponent=!0}}]);