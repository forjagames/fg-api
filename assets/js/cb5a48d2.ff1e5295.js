"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3844],{2091:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=i(4848),l=i(8453);const r={sidebar_position:3},t="Logger and Metrics",o={id:"services/logger",title:"Logger and Metrics",description:"Logger",source:"@site/docs/services/logger.md",sourceDirName:"services",slug:"/services/logger",permalink:"/fg-api/docs/services/logger",draft:!1,unlisted:!1,editUrl:"https://github.com/forjagames/fg-api/edit/main/docs/website/docs/services/logger.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Identity",permalink:"/fg-api/docs/services/identity"},next:{title:"Leaderboard",permalink:"/fg-api/docs/services/leaderboard"}},a={},c=[{value:"Logger",id:"logger",level:2},{value:"Logs and sessions",id:"logs-and-sessions",level:3},{value:"Log levels",id:"log-levels",level:3},{value:"Session lifetime",id:"session-lifetime",level:3},{value:"Metrics",id:"metrics",level:2},{value:"Metric types",id:"metric-types",level:3},{value:"Accumulators",id:"accumulators",level:4},{value:"Counters",id:"counters",level:4},{value:"Springs",id:"springs",level:4},{value:"Metric properties",id:"metric-properties",level:3},{value:"Common properties",id:"common-properties",level:4},{value:"Additional spring properties",id:"additional-spring-properties",level:4},{value:"Common use-cases",id:"common-use-cases",level:3},{value:"Users by Version",id:"users-by-version",level:4},{value:"Total Times Played",id:"total-times-played",level:4},{value:"Total Times Played per Version",id:"total-times-played-per-version",level:4},{value:"Total Accesses to a Specific Level",id:"total-accesses-to-a-specific-level",level:4},{value:"Total Game Time",id:"total-game-time",level:4},{value:"Total Game Time per Version",id:"total-game-time-per-version",level:4},{value:"Total Game Time per Level",id:"total-game-time-per-level",level:4},{value:"Total Game Time per Level per User",id:"total-game-time-per-level-per-user",level:4}];function d(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"logger-and-metrics",children:"Logger and Metrics"}),"\n",(0,n.jsx)(s.h2,{id:"logger",children:"Logger"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"Logger Service"})," allows you to collect information about the project."]}),"\n",(0,n.jsx)(s.h3,{id:"logs-and-sessions",children:"Logs and sessions"}),"\n",(0,n.jsxs)(s.p,{children:["Logs are grouped into ",(0,n.jsx)(s.code,{children:"sessions"}),". To add logs, you must first create a new session. We recommend creating a new session when starting the game or application, and closing the session before stopping the application or game."]}),"\n",(0,n.jsx)(s.h3,{id:"log-levels",children:"Log levels"}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(s.code,{children:"log level"})," or ",(0,n.jsx)(s.code,{children:"log severity"})," is a piece of information telling how important a given log message is. It is a way of distinguishing log events from each other. Severity of all levels is assumed to be numerically ascending from most important to least important."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-javascript",children:"Error = 0\nWarn = 1\nInfo = 2\nHttp = 3\nVerbose = 4\nDebug = 5\nSilly = 6\n"})}),"\n",(0,n.jsx)(s.h3,{id:"session-lifetime",children:"Session lifetime"}),"\n",(0,n.jsxs)(s.p,{children:["After being created, Log sessions have a maximum life of ",(0,n.jsx)(s.code,{children:"90 days"}),". After this time, the session is finished."]}),"\n",(0,n.jsxs)(s.p,{children:["However, if a session does not receive a log for at least ",(0,n.jsx)(s.code,{children:"3 days"}),", it will automatically be finished."]}),"\n",(0,n.jsxs)(s.p,{children:["Finished sessions will be stored for a duration of ",(0,n.jsx)(s.code,{children:"one year"})," from the session's end date, allowing you to analyze the logs. After this period, the finished sessions will be automatically removed.\nAs an administrator, you can manually delete completed sessions."]}),"\n",(0,n.jsx)(s.h2,{id:"metrics",children:"Metrics"}),"\n",(0,n.jsx)(s.p,{children:"Metrics are fundamental entities that enable the measurement of various actions of your projects."}),"\n",(0,n.jsx)(s.h3,{id:"metric-types",children:"Metric types"}),"\n",(0,n.jsx)(s.h4,{id:"accumulators",children:"Accumulators"}),"\n",(0,n.jsx)(s.p,{children:"Metrics falling under this category only accept value increments. Accumulators can only increment values by 1."}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Total number of individuals who have won the game."]}),"\n",(0,n.jsx)(s.h4,{id:"counters",children:"Counters"}),"\n",(0,n.jsx)(s.p,{children:"Metrics in this category allow both value additions and subtractions."}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Count of users within level 5."]}),"\n",(0,n.jsx)(s.h4,{id:"springs",children:"Springs"}),"\n",(0,n.jsx)(s.p,{children:"These metrics incorporate a time-sensitive element. If a specific time window elapses without an update, the metric value is automatically subtracted."}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Count of identified users actively engaging with the game."]}),"\n",(0,n.jsx)(s.h3,{id:"metric-properties",children:"Metric properties"}),"\n",(0,n.jsx)(s.h4,{id:"common-properties",children:"Common properties"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Indicates the type of the metric."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible (default: no):"})," Determines if the metric can be subdivided into smaller components based on tags."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable (default: no):"})," Specifies whether the metric supports division by identifiers."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Accepts Negative Values? (default: no):"})," Defines whether the metric can incorporate negative values."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Maximum Value (default: no limits):"})," Sets the upper limit for metric values."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"additional-spring-properties",children:"Additional spring properties"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Value duration en minutes (default: 5):"})," Sets the expiration of the values."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"common-use-cases",children:"Common use-cases"}),"\n",(0,n.jsx)(s.h4,{id:"users-by-version",children:"Users by Version"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Counter."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible:"})," Yes (version number)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable:"})," Yes (user ID)."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Tracking user distribution across different software versions."]}),"\n",(0,n.jsx)(s.h4,{id:"total-times-played",children:"Total Times Played"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Accumulator."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible:"})," No."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable:"})," No."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Recording the overall frequency of gameplay sessions."]}),"\n",(0,n.jsx)(s.h4,{id:"total-times-played-per-version",children:"Total Times Played per Version"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Accumulator."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible:"})," Yes (version number)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable:"})," No."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Analyzing gameplay frequency based on software version."]}),"\n",(0,n.jsx)(s.h4,{id:"total-accesses-to-a-specific-level",children:"Total Accesses to a Specific Level"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Accumulator."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible:"})," Yes (level ID)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable:"})," No."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Monitoring the engagement with a particular game level."]}),"\n",(0,n.jsx)(s.h4,{id:"total-game-time",children:"Total Game Time"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Accumulator."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible:"})," No."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable:"})," No."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Capturing the overall duration of gameplay."]}),"\n",(0,n.jsx)(s.h4,{id:"total-game-time-per-version",children:"Total Game Time per Version"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Accumulator."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible:"})," Yes (version number)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable:"})," No."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Analyzing total gameplay duration based on software version."]}),"\n",(0,n.jsx)(s.h4,{id:"total-game-time-per-level",children:"Total Game Time per Level"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Accumulator."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible:"})," Yes (level ID)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable:"})," No."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Examining total gameplay duration for each game level."]}),"\n",(0,n.jsx)(s.h4,{id:"total-game-time-per-level-per-user",children:"Total Game Time per Level per User"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Type:"})," Accumulator."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Divisible:"})," Yes (level ID)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Identifiable:"})," Yes (user ID)."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Example:"})," Detailed analysis of individual user gameplay duration across different game levels."]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>o});var n=i(6540);const l={},r=n.createContext(l);function t(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);