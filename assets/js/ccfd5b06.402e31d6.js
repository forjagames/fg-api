"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[477],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(a),c=r,k=m["".concat(o,".").concat(c)]||m[c]||d[c]||l;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5381:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],s={sidebar_position:2},o="Kevin DB Documentation",u={unversionedId:"storage/kevin-db",id:"storage/kevin-db",title:"Kevin DB Documentation",description:"KEVIN DB: Key Value Identity-Integrated Database",source:"@site/docs/storage/kevin-db.md",sourceDirName:"storage",slug:"/storage/kevin-db",permalink:"/fg-api/docs/storage/kevin-db",editUrl:"https://github.com/forjagames/fg-api/edit/main/docs/website/docs/storage/kevin-db.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"DB Explorer",permalink:"/fg-api/docs/storage/db-explorer"},next:{title:"Files Explorer",permalink:"/fg-api/docs/storage/files-explorer"}},p=[{value:"<u>DB Definition</u>",id:"db-definition",children:[],level:2},{value:"<u>Users</u>",id:"users",children:[],level:2},{value:"<u>Keys</u>",id:"keys",children:[{value:"Format",id:"format",children:[],level:3},{value:"Key name",id:"key-name",children:[],level:3},{value:"System Routes",id:"system-routes",children:[],level:3},{value:"Special routes (Shared and Temp)",id:"special-routes-shared-and-temp",children:[],level:3},{value:"Special route Temp",id:"special-route-temp",children:[],level:3},{value:"Special user $global for routes",id:"special-user-global-for-routes",children:[{value:"System Routes for $global",id:"system-routes-for-global",children:[],level:4}],level:3}],level:2},{value:"<u>Values</u>",id:"values",children:[],level:2},{value:"<u>User permissions</u>",id:"user-permissions",children:[{value:"Main structure",id:"main-structure",children:[],level:3},{value:"Priorities",id:"priorities",children:[],level:3},{value:"Identity integration",id:"identity-integration",children:[],level:3}],level:2},{value:"<u>How it works?</u>",id:"how-it-works",children:[],level:2},{value:"<u>Operations</u>:",id:"operations",children:[],level:2}],d={toc:p};function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"kevin-db-documentation"},"Kevin DB Documentation"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"KEVIN DB: ",(0,l.kt)("strong",{parentName:"p"},"Ke"),"y ",(0,l.kt)("strong",{parentName:"p"},"V"),"alue ",(0,l.kt)("strong",{parentName:"p"},"I"),"dentity-I",(0,l.kt)("strong",{parentName:"p"},"n"),"tegrated ",(0,l.kt)("strong",{parentName:"p"},"D"),"ata",(0,l.kt)("strong",{parentName:"p"},"b"),"ase")),(0,l.kt)("small",null,"Revision: 4 | 2022-12-02, by Luciano R."),(0,l.kt)("p",null,"The DB is intended to store data from users."),(0,l.kt)("h2",{id:"db-definition"},(0,l.kt)("u",null,"DB Definition")),(0,l.kt)("p",null,"The DB is an entity. It needs the Project ID."),(0,l.kt)("h2",{id:"users"},(0,l.kt)("u",null,"Users")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"$global: All users."),(0,l.kt)("li",{parentName:"ul"},"$admin: Administrator credentials (example the Game Server)."),(0,l.kt)("li",{parentName:"ul"},"$me: Logged User ID."),(0,l.kt)("li",{parentName:"ul"},"[User ID]",": User ID (from Identity Service).")),(0,l.kt)("h2",{id:"keys"},(0,l.kt)("u",null,"Keys")),(0,l.kt)("h3",{id:"format"},"Format"),(0,l.kt)("p",null,"The format of the keys is:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"[User ID]/[System Route]/[Key name]")),(0,l.kt)("p",null,"If you want to store a bigger key, you need to use the size postfix ",(0,l.kt)("inlineCode",{parentName:"p"},".mk")," (Mega Key)."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"[User ID]/[System Route]/[Key name].mk")),(0,l.kt)("h3",{id:"key-name"},"Key name"),(0,l.kt)("p",null,"The key name must be a slug. Its length cannot exceed 40 characters. Postfixes do not affect the length of the name."),(0,l.kt)("h3",{id:"system-routes"},"System Routes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Private"),": only the user can write and read. ",(0,l.kt)("em",{parentName:"li"},"Useful for storing user settings"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"ReadOnly"),": the admin can write and read. The user can only read."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Shared/","[Target]"),": user can write and read. Other users can read.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"$global"),": all users can read."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"$admin"),": all admins can read."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"[User ID]"),": only the specific ",(0,l.kt)("inlineCode",{parentName:"li"},"User ID")," can read."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Temp/","[Connection ID]","/","[Target]"),": only the user can write and read. All the data is deleted when connection closes. This route don't accept big keys.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"$me"),": only the creator can read and write."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"$global"),": all users can read."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"$admin"),": all admins can read."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"[User ID]"),": only the specific ",(0,l.kt)("inlineCode",{parentName:"li"},"User ID")," can read.")))),(0,l.kt)("h3",{id:"special-routes-shared-and-temp"},"Special routes (Shared and Temp)"),(0,l.kt)("p",null,"The ","[Target]"," of route accept modifiers:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Postfix ",(0,l.kt)("inlineCode",{parentName:"strong"},".awd")),": Admins can read, write and delete the key."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Postfix ",(0,l.kt)("inlineCode",{parentName:"strong"},".ad")),": Admins can read and delete the key."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Postfix ",(0,l.kt)("inlineCode",{parentName:"strong"},".aw")),": Admins can read and write the key.")),(0,l.kt)("h3",{id:"special-route-temp"},"Special route Temp"),(0,l.kt)("p",null,"TODO"),(0,l.kt)("h3",{id:"special-user-global-for-routes"},"Special user $global for routes"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"$global")," path is useful for sharing data and values between all users, ie, saving values globally."),(0,l.kt)("p",null,"The format of the keys is:\n",(0,l.kt)("inlineCode",{parentName:"p"},"$global/[System Route]/[Key name]")),(0,l.kt)("h4",{id:"system-routes-for-global"},"System Routes for $global"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"ReadOnly"),": the admin can write and read. The user can only read."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Shared/","[Target]"),": admin can write and read. Other users can read.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"$global"),": all users can read."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"$admin"),": all admins can read."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"[User ID]"),": only the specific ",(0,l.kt)("inlineCode",{parentName:"li"},"User ID")," can read.")))),(0,l.kt)("h2",{id:"values"},(0,l.kt)("u",null,"Values")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Keys: The values are strings (max length: 255 bytes)."),(0,l.kt)("li",{parentName:"ul"},"Mega Keys: The values are strings (max length: 1 MB).")),(0,l.kt)("h2",{id:"user-permissions"},(0,l.kt)("u",null,"User permissions")),(0,l.kt)("p",null,"User permissions can be view, write, read, and delete. If you don't specify the permissions, they all will be ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," by default.\nYou can set permissions for specific routes, or you can use routes with wilcards."),(0,l.kt)("h3",{id:"main-structure"},"Main structure"),(0,l.kt)("p",null,"Permissions are restrictive. In other words, if the user does not have permissions on a route, due to the ",(0,l.kt)("a",{parentName:"p",href:"#system-routes"},"structure")," defined above, they cannot be forced to have them. Permissions only allows you to increase restrictions. "),(0,l.kt)("h3",{id:"priorities"},"Priorities"),(0,l.kt)("p",null,"Permissions have a priority system. This will be executed only if permissions respects the ",(0,l.kt)("a",{parentName:"p",href:"#system-routes"},"main structure")," are approved.\nThe more specific is the route, the more important will be the permission.\nThis is very useful because it allows you to make exclusions."),(0,l.kt)("p",null,"For example, if you want a user or group to have all folders locked except for a specific one, we can achieve it in the following way:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Route"),(0,l.kt)("th",{parentName:"tr",align:null},"W"),(0,l.kt)("th",{parentName:"tr",align:null},"R"),(0,l.kt)("th",{parentName:"tr",align:null},"V"),(0,l.kt)("th",{parentName:"tr",align:null},"D"),(0,l.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"**"),(0,l.kt)("td",{parentName:"tr",align:null},"X"),(0,l.kt)("td",{parentName:"tr",align:null},"V"),(0,l.kt)("td",{parentName:"tr",align:null},"V"),(0,l.kt)("td",{parentName:"tr",align:null},"X"),(0,l.kt)("td",{parentName:"tr",align:null},"All routes are read-only.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"*/private/preferences/**"),(0,l.kt)("td",{parentName:"tr",align:null},"V"),(0,l.kt)("td",{parentName:"tr",align:null},"V"),(0,l.kt)("td",{parentName:"tr",align:null},"V"),(0,l.kt)("td",{parentName:"tr",align:null},"V"),(0,l.kt)("td",{parentName:"tr",align:null},"Each user can read and write their preferences.")))),(0,l.kt)("h3",{id:"identity-integration"},"Identity integration"),(0,l.kt)("p",null,"If you want to affect only the routes of the user that is calling the action, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"$me")," keyword."),(0,l.kt)("h2",{id:"how-it-works"},(0,l.kt)("u",null,"How it works?")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"User")," connects to the DB using some credentials. "),(0,l.kt)("li",{parentName:"ol"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"User")," sends requests through the DB session."),(0,l.kt)("li",{parentName:"ol"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"User")," closes the connection."),(0,l.kt)("li",{parentName:"ol"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"System")," deletes the temp route.")),(0,l.kt)("h2",{id:"operations"},(0,l.kt)("u",null,"Operations"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Add ","[Key Path]"," = ","[Value]"),": Adds a value. If the key already exists, it fails."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Set ","[Key Path]"," = ","[Value]"),": Sets a value. If the key already exists, it overwrites it."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Get ","[Key Path]"),": Gets a value. If the key doesn't exists, returns null."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Find ","[Key Path]"),": Searchs for a routes that matches the specified path. If it finds it, it returns the routes found and its values. Wildcards are allowed."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"FindOne ","[Key Path]"),": Searchs for a routes that matches the specified path. If it finds it, it returns the route found and its value. Wildcards are allowed."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"FindKeys ","[Key Path]"),": Searchs for a routes that matches the specified path. If it finds it, it returns the routes found. Wildcards are allowed."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Del ","[Key Path]"),": Deletes the key. Returns true if the key existed."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Ren ","[Key Path]"," = ","[New name]"),": Rename the key within the same route."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Mv ","[Key Path]"," = ","[New Key Path]"),": Moves the key to another route. Fails if the origin key doesn't exists, or if the destination key already exists.")))}m.isMDXComponent=!0}}]);