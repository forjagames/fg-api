"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9176],{576:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>o});var r=n(4848),i=n(8453);const t={sidebar_position:2},l="Kevin DB Documentation",d={id:"storage/kevin-db",title:"Kevin DB Documentation",description:"KEVIN DB: Key Value Identity-Integrated Database",source:"@site/docs/storage/kevin-db.md",sourceDirName:"storage",slug:"/storage/kevin-db",permalink:"/fg-api/docs/storage/kevin-db",draft:!1,unlisted:!1,editUrl:"https://github.com/forjagames/fg-api/edit/main/docs/website/docs/storage/kevin-db.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"DB Explorer",permalink:"/fg-api/docs/storage/db-explorer"},next:{title:"Files Explorer",permalink:"/fg-api/docs/storage/files-explorer"}},a={},o=[{value:"<u>DB Definition</u>",id:"db-definition",level:2},{value:"<u>Users</u>",id:"users",level:2},{value:"<u>Keys</u>",id:"keys",level:2},{value:"Format",id:"format",level:3},{value:"Key name",id:"key-name",level:3},{value:"System Routes",id:"system-routes",level:3},{value:"Special routes (Shared and Temp)",id:"special-routes-shared-and-temp",level:3},{value:"Special route Temp",id:"special-route-temp",level:3},{value:"Special user $global for routes",id:"special-user-global-for-routes",level:3},{value:"System Routes for $global",id:"system-routes-for-global",level:4},{value:"<u>Values</u>",id:"values",level:2},{value:"<u>User permissions</u>",id:"user-permissions",level:2},{value:"Main structure",id:"main-structure",level:3},{value:"Priorities",id:"priorities",level:3},{value:"Identity integration",id:"identity-integration",level:3},{value:"<u>How it works?</u>",id:"how-it-works",level:2},{value:"<u>Operations</u>:",id:"operations",level:2}];function c(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"kevin-db-documentation",children:"Kevin DB Documentation"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:["KEVIN DB: ",(0,r.jsx)(s.strong,{children:"Ke"}),"y ",(0,r.jsx)(s.strong,{children:"V"}),"alue ",(0,r.jsx)(s.strong,{children:"I"}),"dentity-I",(0,r.jsx)(s.strong,{children:"n"}),"tegrated ",(0,r.jsx)(s.strong,{children:"D"}),"ata",(0,r.jsx)(s.strong,{children:"b"}),"ase"]}),"\n"]}),"\n",(0,r.jsx)("small",{children:"Revision: 4 | 2022-12-02, by Luciano R."}),"\n",(0,r.jsx)(s.p,{children:"The DB is intended to store data from users."}),"\n",(0,r.jsx)(s.h2,{id:"db-definition",children:(0,r.jsx)("u",{children:"DB Definition"})}),"\n",(0,r.jsx)(s.p,{children:"The DB is an entity. It needs the Project ID."}),"\n",(0,r.jsx)(s.h2,{id:"users",children:(0,r.jsx)("u",{children:"Users"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"$global: All users."}),"\n",(0,r.jsx)(s.li,{children:"$admin: Administrator credentials (example the Game Server)."}),"\n",(0,r.jsx)(s.li,{children:"$me: Logged User ID."}),"\n",(0,r.jsx)(s.li,{children:"[User ID]: User ID (from Identity Service)."}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"keys",children:(0,r.jsx)("u",{children:"Keys"})}),"\n",(0,r.jsx)(s.h3,{id:"format",children:"Format"}),"\n",(0,r.jsx)(s.p,{children:"The format of the keys is:"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"[User ID]/[System Route]/[Key name]"})}),"\n",(0,r.jsxs)(s.p,{children:["If you want to store a bigger key, you need to use the size postfix ",(0,r.jsx)(s.code,{children:".mk"})," (Mega Key)."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"[User ID]/[System Route]/[Key name].mk"})}),"\n",(0,r.jsx)(s.h3,{id:"key-name",children:"Key name"}),"\n",(0,r.jsx)(s.p,{children:"The key name must be a slug. Its length cannot exceed 40 characters. Postfixes do not affect the length of the name."}),"\n",(0,r.jsx)(s.h3,{id:"system-routes",children:"System Routes"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Private"}),": only the user can write and read. ",(0,r.jsx)(s.em,{children:"Useful for storing user settings"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"ReadOnly"}),": the admin can write and read. The user can only read."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Shared/[Target]"}),": user can write and read. Other users can read.","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"$global"}),": all users can read."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"$admin"}),": all admins can read."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"[User ID]"}),": only the specific ",(0,r.jsx)(s.code,{children:"User ID"})," can read."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Temp/[Connection ID]/[Target]"}),": only the user can write and read. All the data is deleted when connection closes. This route don't accept big keys.","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"$me"}),": only the creator can read and write."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"$global"}),": all users can read."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"$admin"}),": all admins can read."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"[User ID]"}),": only the specific ",(0,r.jsx)(s.code,{children:"User ID"})," can read."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"special-routes-shared-and-temp",children:"Special routes (Shared and Temp)"}),"\n",(0,r.jsx)(s.p,{children:"The [Target] of route accept modifiers:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Postfix ",(0,r.jsx)(s.code,{children:".awd"})]}),": Admins can read, write and delete the key."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Postfix ",(0,r.jsx)(s.code,{children:".ad"})]}),": Admins can read and delete the key."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:["Postfix ",(0,r.jsx)(s.code,{children:".aw"})]}),": Admins can read and write the key."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"special-route-temp",children:"Special route Temp"}),"\n",(0,r.jsx)(s.p,{children:"TODO"}),"\n",(0,r.jsx)(s.h3,{id:"special-user-global-for-routes",children:"Special user $global for routes"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"$global"})," path is useful for sharing data and values between all users, ie, saving values globally."]}),"\n",(0,r.jsxs)(s.p,{children:["The format of the keys is:\n",(0,r.jsx)(s.code,{children:"$global/[System Route]/[Key name]"})]}),"\n",(0,r.jsx)(s.h4,{id:"system-routes-for-global",children:"System Routes for $global"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"ReadOnly"}),": the admin can write and read. The user can only read."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Shared/[Target]"}),": admin can write and read. Other users can read.","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"$global"}),": all users can read."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"$admin"}),": all admins can read."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"[User ID]"}),": only the specific ",(0,r.jsx)(s.code,{children:"User ID"})," can read."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"values",children:(0,r.jsx)("u",{children:"Values"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Keys: The values are strings (max length: 255 bytes)."}),"\n",(0,r.jsx)(s.li,{children:"Mega Keys: The values are strings (max length: 1 MB)."}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"user-permissions",children:(0,r.jsx)("u",{children:"User permissions"})}),"\n",(0,r.jsxs)(s.p,{children:["User permissions can be view, write, read, and delete. If you don't specify the permissions, they all will be ",(0,r.jsx)(s.code,{children:"true"})," by default.\nYou can set permissions for specific routes, or you can use routes with wilcards."]}),"\n",(0,r.jsx)(s.h3,{id:"main-structure",children:"Main structure"}),"\n",(0,r.jsxs)(s.p,{children:["Permissions are restrictive. In other words, if the user does not have permissions on a route, due to the ",(0,r.jsx)(s.a,{href:"#system-routes",children:"structure"})," defined above, they cannot be forced to have them. Permissions only allows you to increase restrictions."]}),"\n",(0,r.jsx)(s.h3,{id:"priorities",children:"Priorities"}),"\n",(0,r.jsxs)(s.p,{children:["Permissions have a priority system. This will be executed only if permissions respects the ",(0,r.jsx)(s.a,{href:"#system-routes",children:"main structure"})," are approved.\nThe more specific is the route, the more important will be the permission.\nThis is very useful because it allows you to make exclusions."]}),"\n",(0,r.jsx)(s.p,{children:"For example, if you want a user or group to have all folders locked except for a specific one, we can achieve it in the following way:"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Route"}),(0,r.jsx)(s.th,{children:"W"}),(0,r.jsx)(s.th,{children:"R"}),(0,r.jsx)(s.th,{children:"V"}),(0,r.jsx)(s.th,{children:"D"}),(0,r.jsx)(s.th,{children:"Comment"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"**"}),(0,r.jsx)(s.td,{children:"X"}),(0,r.jsx)(s.td,{children:"V"}),(0,r.jsx)(s.td,{children:"V"}),(0,r.jsx)(s.td,{children:"X"}),(0,r.jsx)(s.td,{children:"All routes are read-only."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.em,{children:"/private/preferences/"}),"*"]}),(0,r.jsx)(s.td,{children:"V"}),(0,r.jsx)(s.td,{children:"V"}),(0,r.jsx)(s.td,{children:"V"}),(0,r.jsx)(s.td,{children:"V"}),(0,r.jsx)(s.td,{children:"Each user can read and write their preferences."})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"identity-integration",children:"Identity integration"}),"\n",(0,r.jsxs)(s.p,{children:["If you want to affect only the routes of the user that is calling the action, you can use the ",(0,r.jsx)(s.code,{children:"$me"})," keyword."]}),"\n",(0,r.jsx)(s.h2,{id:"how-it-works",children:(0,r.jsx)("u",{children:"How it works?"})}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.code,{children:"User"})," connects to the DB using some credentials."]}),"\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.code,{children:"User"})," sends requests through the DB session."]}),"\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.code,{children:"User"})," closes the connection."]}),"\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.code,{children:"System"})," deletes the temp route."]}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"operations",children:[(0,r.jsx)("u",{children:"Operations"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Add [Key Path] = [Value]"}),": Adds a value. If the key already exists, it fails."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Set [Key Path] = [Value]"}),": Sets a value. If the key already exists, it overwrites it."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Get [Key Path]"}),": Gets a value. If the key doesn't exists, returns null."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Find [Key Path]"}),": Searchs for a routes that matches the specified path. If it finds it, it returns the routes found and its values. Wildcards are allowed."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"FindOne [Key Path]"}),": Searchs for a routes that matches the specified path. If it finds it, it returns the route found and its value. Wildcards are allowed."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"FindKeys [Key Path]"}),": Searchs for a routes that matches the specified path. If it finds it, it returns the routes found. Wildcards are allowed."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Del [Key Path]"}),": Deletes the key. Returns true if the key existed."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Ren [Key Path] = [New name]"}),": Rename the key within the same route."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Mv [Key Path] = [New Key Path]"}),": Moves the key to another route. Fails if the origin key doesn't exists, or if the destination key already exists."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>d});var r=n(6540);const i={},t=r.createContext(i);function l(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);